OPENSHIFT_POWERVS_GIT_TF_DEPLOY_PROJECT ?= "https://github.com/ocp-power-automation/ocp4-upi-powervs.git"
OPENSHIFT_POWERVS_GIT_TF_DEPLOY_BRANCH ?= master
OPENSHIFT_POWERVS_DEPLOY_DIR ?= .deploy-openshift4-powervs/
OPENSHIFT_POWERVS_TERRAFORM_VARS_FILE ?= .deploy-openshift4-powervs.tfvars

.PHONY: deploy\:openshift4\:powervs
## Deploy openshift4 on powervs
deploy\:openshift4\:powervs:
	@$(GIT) clone -b $(OPENSHIFT_POWERVS_GIT_TF_DEPLOY_BRANCH) $(OPENSHIFT_POWERVS_GIT_TF_DEPLOY_PROJECT) $(OPENSHIFT_POWERVS_DEPLOY_DIR)
	@$(SELF) terraform:init TERRAFORM_DIR=$(OPENSHIFT_POWERVS_DEPLOY_DIR)
	@$(SELF) terraform:apply TERRAFORM_VARS_FILE=$(OPENSHIFT_POWERVS_TERRAFORM_VARS_FILE) TERRAFORM_DIR=$(OPENSHIFT_POWERVS_DEPLOY_DIR)

.PHONY: deploy\:openshift4\:powervs\:redeploy
## RedoDeploy openshift4 on powervs
deploy\:openshift4\:powervs\:redeploy: %redeploy:
	@$(SELF) terraform:apply TERRAFORM_VARS_FILE=$(OPENSHIFT_POWERVS_TERRAFORM_VARS_FILE) TERRAFORM_DIR=$(OPENSHIFT_POWERVS_DEPLOY_DIR)

.PHONY: deploy\:openshift4\:powervs\:destroy
## Destroy openshift4 on powervs deployment resources
deploy\:openshift4\:powervs\:destroy: %destroy:
	@$(SELF) terraform:destroy TERRAFORM_VARS_FILE=$(OPENSHIFT_POWERVS_TERRAFORM_VARS_FILE) TERRAFORM_DIR=$(OPENSHIFT_POWERVS_DEPLOY_DIR)

.PHONY: deploy\:openshift4\:powervs\:output
## Get output openshift4 on powervs deployment resources
deploy\:openshift4\:powervs\:output: %output:
	@$(SELF) terraform:output TERRAFORM_DIR=$(OPENSHIFT_POWERVS_DEPLOY_DIR) TERRAFORM_OUTPUT_VAR=$(TERRAFORM_OUTPUT_VAR)

.PHONY: deploy\:openshift4\:powervs\:clean
## Clean up all openshift4 on powervs deployment resources
deploy\:openshift4\:powervs\:clean: %clean: %destroy
ifeq ($(shell test -d $(OPENSHIFT_POWERVS_DEPLOY_DIR) && echo -n yes),yes)
	@rm -rf $(OPENSHIFT_POWERVS_DEPLOY_DIR)
endif
